#!/usr/bin/osascript -l JavaScript
// SPDX-FileCopyrightText: 2024 Erik Ben Heckman
// SPDX-PackageDownloadLocation: git://github.com/heckman/photos-server
// SPDX-License-Identifier: GPL-3.0-only

/**
 *
 * export-photos-by-id
 *
 * Export media items, specified by a list of valid ids, from Apple
 * Photos.app on macOS,
 *
 *
 * Copyright (c) 2024 by Erik Ben Heckman <erik@heckman.ca> ("ERIK")
 *
 * Permission to use, copy, modify, and/or distribute this software for
 * any purpose with or without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies.
 *
 * THE SOFTWARE IS PROVIDED “AS IS” AND ERIK DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL ERIK BE LIABLE FOR ANY
 * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/**
 * Usage:
 *
 * export-photos-by-id <id_list> [<destination>]
 */

function run(arguments) {
  [id_list, destination, ...ignored] = arguments;
  if (!id_list) throw "no id list provided";
  if (looks_like_an_id(destination)) {
    // then all arguments are, in fact, ids
    id_list = arguments.flatMap((argument) => argument.split(/\s/));
    destination = ".";
  } else {
    id_list = id_list.split(/\s/);
    if (!destination) destination = ".";
  }
  perform_media_items_export(id_list, destination);
}

// SIDE EFFECT: writes media item to file
function perform_media_items_export(ids, posix_path) {
  Application("Photos").export(
    ids.map((id) => Application("Photos").mediaItems.byId(id)),
    {
      to: Path(posix_path),
    }
  );
}

function looks_like_an_id(possible_id) {
  // /^[0-9a-fA-F]/.test(possible_id);
  return /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/.test(
    possible_id
  );
}
