#!/bin/dash
# Copyright (c) 2024 Erik Ben Heckman, shared under the GPL-3.0 license
# except where otherwise noted
# <https://github.com/heckman/photos-server>
#
#
#  photos-http-handler
#
#
# Serves photos from Apple Photos.

# Responds to http requests from stdin, where the root of the url
# path is either the UUID of a media item in Apple Photos or a
# search query.
#
# If a UUID is provided and matches the id of a media item in the
# Photos library, the media item is served. If the UUID is
# invalid, a 404 error is returned.
#
# A provided query will generate a search by Apple Photos for
# matching photos. (It is limited to photos). Among the results, a
# random one will be served. If the search comes up empty, a 404 error is returnd.
#
# If the search takes longer than a preset timeout, or one specified
# on the command line, a 500 error is returned.
#
# If the second element of the path is "open" then Apple Photos is
# also launched, with specified/queried media item "spotlighted".
# Note that if the media item is determined by a search, then tho
# one "spotlighted" and returned via HTTP might be different photos!
#
#
# requires: trurl  (available via homebrew)

TRURL=/opt/homebrew/bin/trurl
PHOTOS_CLI=/usr/local/bin/photos-cli

DEFAULT_TIMEOUT_SECONDS=1



TEMP_TEMPLATE=ca.heckman.photos-server.image
STDLOG=/dev/null

ERR_PHOTOS_TIMEOUT=143  # error generated by photos-cli
# ERR_TIMEOUT=124  # generated by `timeout` command, currently not in use
ERR_EXPORT=144  # arbitrary value, thrown when exported file can't be read

main(){
  # ignore the rest of the request handlers
  dispatch_request "$(awk '{print $2;exit}')" # does not return
  # shellcheck disable=SC2317  # unreachable code
  exit 1 # should not be reachable

}

dispatch_request(){ local request_url="$1" path op
  path="$($TRURL --get '{path}' "stub.domain/${request_url#/}" | sed 's|^/||')"
  op="$($TRURL --get '{query}' "stub.domain/${request_url#/}")"
  # echo "request_url: $request_url, path: $path, op: $op"; exit
  case "$op" in
  "open")
    serve "$path" "--open" ;;
  *)
    serve "$path";;
  esac
  # shellcheck disable=SC2317  # unreachable code
  exit 1 # should not be reachable
}

serve(){ local query="$1" options="${2:-}"
  tmpdir="$(mktemp -d -t $TEMP_TEMPLATE)" && trap "rm -rf '$tmpdir'" EXIT

	# shellcheck disable=SC2086
	"$PHOTOS_CLI" export $options "$query" "$tmpdir" >/dev/null || error "$?: $PHOTOS_CLI export $options '$query' '$tmpdir'"

	filename="$(a_file_in "$tmpdir")" || error $ERR_EXPORT
	filesize="$(stat -f'%z' "$filename")"
	filetype="$(file -b --mime-type "$filename")"
	basename="$(basename "$filename")"

	echo "HTTP/1.1 200 OK
Content-Type: $filetype
Content-Length: $filesize
Content-Disposition: inline; filename=$basename
"; cat "$filename";

	exit 0
}

error(){
	log 'Error: %s\n' "$1"
	# shellcheck disable=SC2254  # these are integers
	case "$1" in
	$ERR_TIMEOUT|$ERR_PHOTOS_TIMEOUT|$ERR_EXPORT)
		status="500 Internal Server Error"
		filename="error.svg"
		svg="$error_svg";;
	*)
		status="404 Not Found"
		filename="missing.svg"
		svg="$missing_svg";;
	esac
	echo -n "HTTP/1.1 $status
Content-Type: svg+xml
Content-Length: ${#svg}
Content-Disposition: inline; filename=$filename

$svg";
exit 1
}


a_file_in(){
	find "$1" -maxdepth 1 -type f ! -name '.*' 2>/dev/null | grep -F ''
}


log(){
  if test -z "$1"
  then cat - >>$STDLOG
  else { printf -- '-> '; printf -- "$@"; } >>$STDLOG
  fi
}

missing_svg='<?xml version="1.0" encoding="UTF-8"?>
<!-- old school pixellated netscape broken image icon -->
<!--
  icon created for Netscape Navigator by Marsh Chamberlin (https://dataglyph.com)
  SVG hand-coded by github user diachedelic (https://gist.github.com/diachedelic)
  source: https://gist.github.com/diachedelic/cbb7fdd2271afa52435b7d4185e6a4ad
  accessed: 2024-02-12
-->
<svg viewBox="0 0 14 16" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <g id="borders-and-backgrounds">
    <path d="M0,0 L10,0 L10,1 L1,1 L1,15 L2,15 L2,16 L0,16 Z" fill="black"></path>
    <path d="M10,4 l4,0 l0,3 l-1,0 l0,-2 l-3,0 Z" fill="black"></path>
    <path d="M14,16 l0,-6 l-1,0 l0,5 l-5,0 l0,1 Z" fill="black"></path>
    <path d="M12,14 l0,-3 l-1,0 l0,2 l-2,0 l0,1 Z" fill="#bcbcc3"></path>
    <path d="M10,0 l1,0 l0,1 l1,0 l0,1 l1,0 l0,1 l1,0 l0,1 l-1,0 l0,-1 l-1,0 l0,-1 l-1,0 l0,2 l-1,0 Z" fill="#878787">
    </path>
    <path d="M2,2 l8,0 l0,3 l2,0 l0,2 l-4,0 l0,5 l-2,0 l0,1 l-2,0 l0,1 l-2,0 Z" fill="#bcbcc3"></path>
  </g>
  <g id="lefteye">
    <path d="M5,3 l2,0 l0,3 l-3,0 l0,-2 l1,0 l0,1 l1,0 l0,-1 l-1,0 Z" fill="#00891e"></path>
    <path d="M5,4 l1,0 l0,1 l-1,0 Z" fill="#00f248"></path>
    <path d="M7,4 l1,0 l0,2 l-1,0 l0,1 l-2,0 l0,-1 l2,0 Z" fill="black"></path>
  </g>
  <g id="righteye">
    <path d="M8,7 l3,0 l0,2 l-1,0 l0,-1 l-1,0 l0,1 l1,0 l0,1 l-2,0 Z" fill="#0064fb"></path>
    <path d="M9,8 l1,0 l0,1 l-1,0 Z" fill="#00fbfe"></path>
    <path d="M10,9 l1,0 l0,1 l-1,0 Z" fill="#003293"></path>
    <path d="M11,7 l1,0 l0,2 l-1,0 Z" fill="black"></path>
    <path d="M8,10 l2,0 l0,1 l-2,0 Z" fill="black"></path>
  </g>
  <g id="mouth">
    <path d="M3,8 l1,0 l0,1 l1,0 l0,1 l1,0 l0,1 l1,0 l0,1 l-1,0 l0,-1 l-1,0 l0,-1 l-1,0 l0,-1 l-1,0 Z" fill="#ff3900">
    </path>
    <path d="M3,9 l1,0 l0,1 l1,0 l0,1 l1,0 l0,1 l-3,0 Z" fill="#f73ae1"></path>
    <path d="M3,12 l3,0 l0,1 l-3,0 Z" fill="black"></path>
  </g>
</svg>
'

error_svg='<?xml version="1.0" encoding="UTF-8"?>
<!--
The "Sad Mac" icon was created for Apple Inc. by Susan Kare https://kareprints.com
The SVG was hand-coded Erik Ben Heckman https://erik.heckman.ca
and can be found embedded in the code for https://github.com/heckman/photos-server
-->
<svg viewBox="0 0 37 37" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path id="mask" fill="#ffffff" d="
    M6,4 h25 v26 h-25 z M7,3 h23 v32 h-23 zM8,2 h 21 v 2 h-21 z"></path>
  <path id="lines" fill-rule="evenodd" fill="black" d="
    M6,4 h25 v26 h-25 z M7,3 h23 v32 h-23 z M8,2 h 21 v 2 h-21 z M8,31 h21 v 3 h-21 Z
    M10,5 h17 v16 h-17 z M9,6 h19 v14 h-19 Z
    M13,9 h1 v3 h-1 v-1 h3 v1 h-1 v-3 h1 v1 h-3 Z
    M21,9 h1 v3 h-1 v-1 h3 v1 h-1 v-3 h1 v1 h-3 Z
    M16,13 h1 v2 h2 v-2 h1 v1 h-4 Z
    M16,16 h5 v2 h3 v1 h-1 v-2 h-8 v 1 h 1 Z
    M9,26 h2 v1 h-2 Z
    M21,25 h6 v1 h-6 Z"></path>
</svg>
'

main "$@"
